(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{502:function(t,a,s){"use strict";s.r(a);var n=s(30),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"react是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react是什么"}},[t._v("#")]),t._v(" React是什么?")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/bymori/image-PicX@main/img/tmw4jrk4bz-1639359834510.png",alt:"React"}})]),t._v(" "),s("p",[t._v("主要的任务就是构建用于界面，而构建用于界面离不开三个技术:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("HTML")]),t._v("：构建页面的结构")]),t._v(" "),s("li",[s("strong",[t._v("CSS")]),t._v("：构建页面的样式")]),t._v(" "),s("li",[s("strong",[t._v("JavaScript")]),t._v("：页面动态内容和交互")])]),t._v(" "),s("p",[t._v("使用最原生的HTML、CSS、JavaScript可以构建完整的用户界面，"),s("strong",[t._v("但是")]),t._v("会存在很多问题")]),t._v(" "),s("ul",[s("li",[t._v("比如操作DOM兼容性的问题")]),t._v(" "),s("li",[t._v("比如过多兼容性代码的冗余问题")]),t._v(" "),s("li",[t._v("比如代码组织和规范的问题")])]),t._v(" "),s("h3",{attrs:{id:"常见的javascript库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的javascript库"}},[t._v("#")]),t._v(" 常见的JavaScript库")]),t._v(" "),s("p",[t._v("现在前端领域最为流行的几大框架：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/vuejs/vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/facebook/react",target:"_blank",rel:"noopener noreferrer"}},[t._v("React"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/angular/angular",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angula"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/solidjs/solid",target:"_blank",rel:"noopener noreferrer"}},[t._v("solid"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/sveltejs/svelte",target:"_blank",rel:"noopener noreferrer"}},[t._v("Svelte"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"react的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的特点"}},[t._v("#")]),t._v(" React的特点")]),t._v(" "),s("ol",[s("li",[t._v("声明式设计 −React采用声明范式，可以轻松描述应用")]),t._v(" "),s("li",[t._v("高效 −React通过对DOM的模拟，最大限度地减少与DOM的交互")]),t._v(" "),s("li",[t._v("灵活 −React可以与已知的库或框架很好地配合")]),t._v(" "),s("li",[t._v("JSX − JSX 是 JavaScript 语法的扩展。React 开发不一定使用 JSX ，但我们建议使用它")]),t._v(" "),s("li",[t._v("组件 − 通过 React 构建组件，使得代码更加容易得到复用，能够很好的应用在大项目的开发中")]),t._v(" "),s("li",[t._v("单向响应的数据流 − React 实现了单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单")])]),t._v(" "),s("h4",{attrs:{id:"声明式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明式编程"}},[t._v("#")]),t._v(" 声明式编程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("声明式编程是目前整个大前端开发的模式：Vue、React、Flutter、SwiftUI；")])]),t._v(" "),s("li",[s("p",[t._v("它允许我们只需要维护自己的状态，当状态改变时，React可以根据最新的状态去渲染我们的UI界面")])]),t._v(" "),s("li",[s("p",[t._v("命令式编程: 每做一个操作,都是给计算机(浏览器)一步步命令")])]),t._v(" "),s("li",[s("p",[t._v("声明式编程: 虚拟DOM帮助我们从命令式编程转到了声明式编程的模式")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/bymori/image-PicX@main/img/em9g7nn0e2-1639360915952.png",alt:"声明式编程"}})]),t._v(" "),s("h4",{attrs:{id:"组件化开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化开发"}},[t._v("#")]),t._v(" 组件化开发")]),t._v(" "),s("p",[t._v("构建管理自身状态的封装组件，然后对其组合以构成复杂的 UI。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/bymori/image-PicX@main/img/0jv461ks9i-1639360989464.png",alt:"组件化开发"}})]),t._v(" "),s("h3",{attrs:{id:"hello-react-组件化开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-react-组件化开发"}},[t._v("#")]),t._v(" Hello React – 组件化开发")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("整个逻辑其实可以看做一个整体，那么就可以将其封装成一个组件")]),t._v(" "),s("ul",[s("li",[t._v("我们说过 ReactDOM.render 第一参数是一个HTML原生或者一个组件；")]),t._v(" "),s("li",[t._v("所以我们可以先将之前的业务逻辑封装到一个组件中，然后传入到 "),s("code",[t._v("ReactDOM.render")]),t._v(" 函数中的第一个参数")])])]),t._v(" "),s("li",[s("p",[t._v("在React中，如何封装一个组件呢？")]),t._v(" "),s("ul",[s("li",[t._v("这里使用类的方式封装组件：")]),t._v(" "),s("li",[t._v("1.定义一个类（"),s("code",[t._v("类名大写")]),t._v("，组件的名称是必须大写的，小写会被认为是HTML元素），继承自"),s("code",[t._v("React.Component")])]),t._v(" "),s("li",[t._v("2.实现当前组件的render函数")]),t._v(" "),s("li",[s("code",[t._v("render")]),t._v("当中返回的jsx内容，就是之后React会帮助我们渲染的内容")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello World"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nReactDOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"组件化-数据依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化-数据依赖"}},[t._v("#")]),t._v(" 组件化 - 数据依赖")]),t._v(" "),s("p",[t._v("组件化问题一："),s("strong",[t._v("数据在哪里定义")])]),t._v(" "),s("ul",[s("li",[t._v("在组件中的数据，我们可以分成两类：\n"),s("ul",[s("li",[t._v("参与界面更新的数据：当数据变量时，需要更新组件渲染的内容")]),t._v(" "),s("li",[t._v("不参与界面更新的数据：当数据变量时，不需要更新将组建渲染的内容")])])]),t._v(" "),s("li",[t._v("参与界面更新的数据我们也可以称之为是参与数据流，这个数据是定义在当前对象的state中\n"),s("ul",[s("li",[t._v("我们可以通过在构造函数中 this.state = {定义的数据}")]),t._v(" "),s("li",[t._v("当我们的数据发生变化时，我们可以调用 this.setState 来更新数据，并且通知React进行update操作\n"),s("ul",[s("li",[t._v("在进行update操作时，就会重新调用render函数，并且使用最新的数据，来渲染界面")])])])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"组件化-事件绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化-事件绑定"}},[t._v("#")]),t._v(" 组件化 – 事件绑定")]),t._v(" "),s("p",[t._v("组件化问题二："),s("strong",[t._v("事件绑定中的this")])]),t._v(" "),s("ul",[s("li",[t._v("在类中直接定义一个函数，并且将这个函数绑定到html原生的onClick事件上，当前这个函数的this指向的是谁呢？")]),t._v(" "),s("li",[t._v("默认情况下是undefined\n"),s("ul",[s("li",[t._v("很奇怪，居然是undefined；")]),t._v(" "),s("li",[t._v("因为在正常的DOM操作中，监听点击，监听函数中的this其实是节点对象（比如说是button对象）；")]),t._v(" "),s("li",[t._v("这次因为React并不是直接渲染成真实的DOM，我们所编写的button只是一个语法糖，它的本质React的Element对象；")]),t._v(" "),s("li",[t._v("那么在这里发生监听的时候，react给我们的函数绑定的this，默认情况下就是一个undefined；")])])]),t._v(" "),s("li",[t._v("我们在绑定的函数中，可能想要使用当前对象，比如执行 this.setState 函数，就必须拿到当前对象的this")]),t._v(" "),s("li",[t._v("我们就需要在传入函数时，给这个函数直接绑定this")]),t._v(" "),s("li",[t._v("类似于下面的写法：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("btnClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("改变文本"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("btnClick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);